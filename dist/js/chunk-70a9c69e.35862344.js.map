{"version":3,"sources":["webpack:///./src/components/other/MarkDown.vue?b659","webpack:///./src/network/Files.js","webpack:///src/components/other/MarkDown.vue","webpack:///./src/components/other/MarkDown.vue?57a8","webpack:///./src/components/other/MarkDown.vue","webpack:///./node_modules/wangeditor/release/wangEditor.js","webpack:///./src/network/Directory.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/views/Article/CreateArticle.vue?8b6c","webpack:///./src/components/other/WangEditor.vue?9745","webpack:///./src/components/other/MarkDown.vue?8df6","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./src/views/Article/CreateArticle.vue?7855","webpack:///./src/components/other/WangEditor.vue?0bb7","webpack:///src/components/other/WangEditor.vue","webpack:///./src/components/other/WangEditor.vue?3d10","webpack:///./src/components/other/WangEditor.vue","webpack:///src/views/Article/CreateArticle.vue","webpack:///./src/views/Article/CreateArticle.vue?b980","webpack:///./src/views/Article/CreateArticle.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","defaultOpen","subfield","toolbarsFlag","on","imgAdd","imgDel","model","value","callback","$$v","content","expression","staticRenderFns","httpImageAdd","$file","msg","validateLogin","Error","formdata","FormData","append","instance","request","url","method","data","headers","showClose","message","type","name","components","mavonEditor","prop","event","props","articleContent","String","Boolean","default","computed","watch","$emit","val","articleHtml","$refs","d_render","created","mounted","updated","beforeDestory","methods","then","$vm","$img2Url","pos","component","global","factory","module","exports","polyfill","Object","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","i","item","createElemByHTML","html","div","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","result","eventList","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","$","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","get","first","last","types","split","addEventListener","e","off","removeEventListener","attr","key","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","hide","childNodes","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","reg","test","isIE","window","objForEach","obj","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","pasteText","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","txt","items","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","pasteTime","canDo","now","Date","flag","resetTime","ex","pasteFiles","img","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","onload","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","beforeResult","prevent","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","inlinecss","getElementsByTagName","wangEditor","httpCreateDirector","pid","path","articleId","uid","params","post","httpDeleteDirector","httpUpdateDirectory","httpGetDirectory","$trim","forcedStringTrimMethod","proto","forced","requireObjectCoercible","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","string","start","end","fails","non","METHOD_NAME","articleName","slot","_v","articleTags","getElement","_l","domProps","stringify","childrens","_s","getArticle","cancleEdit","commitArticle","putEditContent","newContent","setEditHTMLContent","createEdit","dynamicHeight","destroyed","getEditHTMLContent","getEditTXTContent","changeHeight","wangeEditWrapper","clientHeight","WangeEdit","MarkDown","directorys","beforeDestroy","history","back","arrays","selecttions","selectedIndex","temp","pop","isRootTree","undefined","$message","dangerouslyUseHTMLString","deleteSelection","option","createDilog","createSelection","selectObj","innerText","nextDocObj","deletArray","nextElementSibling","hpDialog","getElementById","body","divObj","input","btnGroup","buttonDo","buttonCancle"],"mappings":"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","file":"js/chunk-70a9c69e.35862344.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mavonEditor\"},[_c('mavon-editor',{ref:\"markDown\",attrs:{\"defaultOpen\":_vm.defaultOpen,\"subfield\":_vm.subfield,\"toolbarsFlag\":_vm.toolbarsFlag},on:{\"imgAdd\":_vm.imgAdd,\"imgDel\":_vm.imgDel},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import instance from './base.js'\r\n\r\nimport {\r\n    validateLogin\r\n} from '@/utils/Validate.js'\r\nimport {\r\n    Message\r\n} from 'element-ui';\r\n\r\nexport async function httpImageAdd($file){\r\n    let msg = {};\r\n    try {\r\n        if (validateLogin() === false) throw new Error(\"请您登录\");\r\n        let formdata = new FormData();\r\n        formdata.append(\"image\", $file);\r\n\r\n        let {data} = await instance.request({\r\n            url: \"/imageAdd\",\r\n            method: \"post\",\r\n            data: formdata,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n\r\n        msg.url = data.data[0];\r\n        Message({\r\n            showClose: true,\r\n            message: \"图片上传成功\",\r\n            type: 'success',\r\n        });\r\n    } catch (error) {\r\n        Message({\r\n            showClose: true,\r\n            message: error,\r\n            type: 'error',\r\n        });\r\n    }\r\n\r\n    return msg;\r\n} ","<template>\r\n  <div class=\"mavonEditor\">\r\n    <mavon-editor\r\n      v-model=\"content\"\r\n      :defaultOpen=\"defaultOpen\"\r\n      :subfield=\"subfield\"\r\n      :toolbarsFlag=\"toolbarsFlag\"\r\n      ref=\"markDown\"\r\n      @imgAdd=\"imgAdd\"\r\n      @imgDel=\"imgDel\"\r\n    ></mavon-editor>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport { mavonEditor } from \"mavon-editor\";\r\nimport {httpImageAdd} from \"@/network/Files\"\r\nimport \"mavon-editor/dist/css/index.css\";\r\nexport default {\r\n  name: \"Markdown\",\r\n  components: {\r\n    mavonEditor,\r\n  },\r\n  model: {\r\n    prop: \"articleContent\",\r\n    event: \"change\",\r\n  },\r\n  props: {\r\n    articleContent: {\r\n      type: String,\r\n    },\r\n    subfield: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    defaultOpen: {\r\n      type: String,\r\n      default: \"preview\",\r\n    },\r\n    toolbarsFlag: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      content: \"\",\r\n    };\r\n  },\r\n  computed: {},\r\n  watch: {\r\n    content: function(val, oldVal) {\r\n      this.$emit(\"change\", val);\r\n      this.$emit(\"success\", {\r\n        articleContent: val,\r\n        articleHtml: this.$refs[\"markDown\"].d_render,\r\n      });\r\n    },\r\n    articleContent() {\r\n      this.content = this.articleContent;\r\n    },\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  updated() {},\r\n  beforeDestory() {},\r\n  methods: {\r\n    imgAdd(pos, $file) {\r\n      // 第一步.将图片上传到服务器.\r\n      var formdata = new FormData();\r\n      formdata.append(\"image\", $file);\r\n      httpImageAdd($file).then((data) => {\r\n        let $vm = this.$refs['markDown'];\r\n        $vm.$img2Url(pos, data.url);\r\n      });\r\n    },\r\n    imgDel() {},\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.mavonEditor {\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkDown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkDown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MarkDown.vue?vue&type=template&id=30e9df32&\"\nimport script from \"./MarkDown.vue?vue&type=script&lang=js&\"\nexport * from \"./MarkDown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MarkDown.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n","import instance from './base.js'\r\n\r\n/**\r\n * 查询所有目录\r\n * @param {String} url 接口路径\r\n * 返回一个promise\r\n */\r\nexport function getDirectory(url) {\r\n    return instance.get(url);\r\n}\r\n/**\r\n * 更新目录\r\n * @param {String} url \r\n * @param {Array} params 存储各个参数，格式如下。\r\n * @param {Number} id     目录ID\r\n * @param {String} path   目录路径\r\n * @param {String} name   目录名称\r\n * @param {Number} flag   0代表目录,其它数字代表文章\r\n */\r\nexport function updateDirectory(url,params) {\r\n    let {id,path,name} =  params;\r\n    //return instance.post(url,id,path,name);\r\n    instance.post(url,params);\r\n}\r\n\r\n/**\r\n * 提交一篇文章\r\n * @param {String} url \r\n * @param {String} articleId  文章ID\r\n * @param {String} articleName  文章名\r\n * @param {String} articleContent 文章内容\r\n */\r\nexport function putArticle(url,articleId,articleName,articleContent) {\r\n    return instance.post(url,articleId,articleName,articleContent);\r\n}\r\n\r\n/**\r\n * 创建目录\r\n * @param {String} url \r\n * @param {Array} params 存储各个参数，格式如下。\r\n * @param {Number} pid  上级目录ID\r\n * @param {String} path 目录路径\r\n * @param {String} name 目录名称\r\n * @param {Number} articleId 0为目录，其它为文章id;\r\n */\r\nexport function createDirector(url,params) {\r\n    return instance.post(url,params);\r\n}\r\n\r\n/**\r\n * 删除目录\r\n */\r\nexport function deleteDirector(url,params) {\r\n    return instance.post(url,params);\r\n}\r\n\r\n/**\r\n * 创建目录\r\n * @param {Number} pid  上级目录ID\r\n * @param {String} path 目录路径\r\n * @param {String} name 目录名称\r\n * @param {Number} articleId 0为目录，其它为文章id;\r\n * @param {Number} uid 用户id;\r\n */\r\n export function httpCreateDirector(pid,path,name,articleId,uid) {\r\n   let params = {pid,path,name,articleId,uid}\r\n   return instance.post(\r\n       `/directory/add`,\r\n       params);\r\n}\r\n\r\n/**\r\n * 删除目录\r\n * @param {Number} id   目录ID\r\n */\r\n export function httpDeleteDirector({id,uid}) {\r\n    return instance.request({\r\n        url: '/director/delete',\r\n        method: 'get', // default\r\n        params: {\r\n            id,\r\n            uid,\r\n        },\r\n    })\r\n}\r\n\r\n/**\r\n * 更新目录\r\n * @param {Number} id     目录ID\r\n * @param {String} path   目录路径\r\n * @param {String} name   目录名称\r\n */\r\n export function httpUpdateDirectory(id,path,name) {\r\n    return instance.post(\r\n        '/directory/update',\r\n        {id,path,name}\r\n    );\r\n}\r\n\r\n/**\r\n * 查询用户所有目录\r\n * @param {number} uid 用户id\r\n * 返回一个promise\r\n */\r\n export function httpGetDirectory(uid) {\r\n    return instance.get(\r\n        `/directory/queryAll?uid=${uid}`\r\n    );\r\n}","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WangEditor.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WangEditor.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkDown.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MarkDown.vue?vue&type=style&index=0&lang=less&\"","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"createArticle\"}},[_c('div',{staticClass:\"Article-wrapper\"},[_c('el-input',{attrs:{\"placeholder\":\"请输入标题\"},model:{value:(_vm.articleName),callback:function ($$v) {_vm.articleName=$$v},expression:\"articleName\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"文章标题 \")])],2),_c('el-input',{attrs:{\"placeholder\":\"请输入标签，注意每个标签用英文逗号隔开\"},model:{value:(_vm.articleTags),callback:function ($$v) {_vm.articleTags=$$v},expression:\"articleTags\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"文章标签\")])],2),_c('div',{staticClass:\"articleLocation_wrapper\"},[_c('span',[_vm._v(\"文章所属目录：\")]),_c('div',{staticClass:\"select_wrapper \",attrs:{\"id\":\"select_hp\"}},[_c('select',{attrs:{\"name\":\"\",\"id\":\"\"},on:{\"change\":_vm.getElement}},[_c('option',{attrs:{\"index\":\"-1\"}},[_vm._v(\"请选择\")]),_vm._l((_vm.directorys),function(value,index){return _c('option',{key:index,attrs:{\"index\":index,\"path\":value.path,\"id\":value.id},domProps:{\"value\":JSON.stringify(value.childrens)}},[_vm._v(_vm._s(value.name))])})],2)])]),_c('div',{staticClass:\"wangeEdit_wrapper\"},[_c('mark-down',{on:{\"success\":_vm.getArticle},model:{value:(_vm.articleContent),callback:function ($$v) {_vm.articleContent=$$v},expression:\"articleContent\"}})],1),_c('div',{staticClass:\"btn_wrapper\"},[_c('el-button-group',[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-circle-close\"},on:{\"click\":_vm.cancleEdit}},[_vm._v(\"退出\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-upload2\"},on:{\"click\":_vm.commitArticle}},[_vm._v(\"上传\")])],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"wangeEdit\"}},[_c('div',{staticClass:\"toolbar\",attrs:{\"id\":\"wangeEditToolBar\"}}),_c('div',{attrs:{\"id\":\"wangeEditWrapper\"},on:{\"mouseout\":_vm.putEditContent}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"wangeEdit\">\r\n    <div id=\"wangeEditToolBar\" class=\"toolbar\"></div>\r\n    <div id=\"wangeEditWrapper\" v-on:mouseout=\"putEditContent\" style=\"\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport E from \"wangeditor\";\r\n\r\nexport default {\r\n  model: {\r\n    prop: \"content\",\r\n    event: \"change\",\r\n  },\r\n  props: {\r\n    content: {\r\n      type: String,\r\n    },\r\n  },\r\n  name: \"wangeEdit\",\r\n  data() {\r\n    return {\r\n      newContent: this.content,\r\n      editor: Object,\r\n    };\r\n  },\r\n  watch: {\r\n    content: function (val, oldVal) {\r\n      this.newContent = val;\r\n      //document.getElementById('HpEdit_editContent').innerHTML = val;\r\n      this.setEditHTMLContent(val);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.createEdit();\r\n    this.dynamicHeight();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener('resize',this.changeHeight);\r\n  },\r\n  methods: {\r\n    createEdit() {\r\n      this.editor = new E(\"#wangeEditToolBar\", \"#wangeEditWrapper\");\r\n      this.editor.customConfig.menus = [\r\n        \"head\", // 标题\r\n        \"bold\", // 粗体\r\n        \"fontSize\", // 字号\r\n        \"fontName\", // 字体\r\n        \"italic\", // 斜体\r\n        \"underline\", // 下划线\r\n        \"strikeThrough\", // 删除线\r\n        \"foreColor\", // 文字颜色\r\n        \"backColor\", // 背景颜色\r\n        \"link\", // 插入链接\r\n        \"list\", // 列表\r\n        \"justify\", // 对齐方式\r\n        \"quote\", // 引用\r\n        \"emoticon\", // 表情\r\n        \"image\", // 插入图片\r\n        \"table\", // 表格\r\n        \"video\", // 插入视频\r\n        \"code\", // 插入代码\r\n        \"undo\", // 撤销\r\n        \"redo\", // 重复\r\n      ];\r\n      this.editor.customConfig.uploadImgShowBase64 = true; // 使用 base64 保存图片\r\n      this.editor.customConfig.pasteFilterStyle = false;\r\n      this.editor.customConfig.uploadImgServer = \"/uploadImage\"; // 上传图片到服务器\r\n      this.editor.customConfig.linkImgCallback = function (url) {\r\n      };\r\n      this.editor.customConfig.uploadImgHooks = {\r\n        before: function (xhr, editor, files) {\r\n          // 图片上传之前触发\r\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件\r\n          //xhr.open('POST', 'http://localhost:3000/uploadImage', true);\r\n          //console.log(files,'图片')\r\n          // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\r\n          // return {\r\n          //     prevent: true,\r\n          //     msg: '放弃上传'\r\n          // }\r\n        },\r\n        success: function (xhr, editor, result) {\r\n          // 图片上传并返回结果，图片插入成功之后触发\r\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\r\n          xhr.open(\"GET\", result.data[0], true);\r\n          //alert('上传成功！');\r\n        },\r\n        fail: function (xhr, editor, result) {\r\n          // 图片上传并返回结果，但图片插入错误时触发\r\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\r\n          alert(\"上传失败！\");\r\n        },\r\n        error: function (xhr, editor) {\r\n          // 图片上传出错时触发\r\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\r\n          alert(\"上传错误！\");\r\n        },\r\n        timeout: function (xhr, editor) {\r\n          // 图片上传超时时触发\r\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\r\n          alert(\"上传超时！\");\r\n        },\r\n\r\n        // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\r\n        // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）\r\n        /*customInsert: function (insertImg, result, editor) {\r\n                    // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）\r\n                    // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果\r\n\r\n                    // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：\r\n                    //let url = result.data[0].substring(result.data[0].indexOf('/'));\r\n                    let url = result.data[0];\r\n                   // console.log(url);\r\n                    insertImg(url);\r\n                    // result 必须是一个 JSON 格式字符串！！！否则报错\r\n                }*/\r\n      };\r\n      this.editor.create();\r\n    },\r\n    getEditHTMLContent() {\r\n      return this.editor.txt.html();\r\n    },\r\n    getEditTXTContent() {\r\n      return this.editor.txt.text();\r\n    },\r\n    setEditHTMLContent(val) {\r\n      this.editor.txt.html(val);\r\n    },\r\n    /**\r\n     * 将数据传给父组件\r\n     */\r\n    putEditContent() {\r\n      let articleContent = this.getEditHTMLContent();\r\n      let articleContentText = this.getEditTXTContent();\r\n      this.$emit(\"change\", articleContent); // 父组件用v-modle来接收 所以事件要用input\r\n      this.$emit(\"getArticle\", { articleContent, articleContentText });\r\n    },\r\n    /**\r\n     * 通过监听resize动态修改wangeEditWrapper高度，保证动态响应。CSS搞不了，不知道为什么哦\r\n     */\r\n    dynamicHeight() {\r\n      this.changeHeight();\r\n      window.addEventListener(\"resize\", this.changeHeight);\r\n    },\r\n    /**\r\n     * \r\n     */\r\n    changeHeight(){\r\n      if(document.getElementById(\"wangeEdit\").parentNode == null) return;\r\n      let parent = document.getElementById(\"wangeEdit\").parentNode;\r\n      let wangeEditWrapper = document.getElementById(\"wangeEditWrapper\");\r\n      wangeEditWrapper.style.height = parent.clientHeight - 30 + \"px\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style  lang='less'>\r\n#wangeEdit {\r\n  .toolbar {\r\n    border-bottom: 1px solid rgba(146, 146, 146, 0.8);\r\n  }\r\n  #wangeEditWrapper {\r\n    overflow: auto;\r\n\r\n    border-bottom: 1px solid rgba(146, 146, 146, 0.8);\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WangEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WangEditor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WangEditor.vue?vue&type=template&id=0267b7fe&\"\nimport script from \"./WangEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./WangEditor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WangEditor.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"createArticle\">\r\n    <div class=\"Article-wrapper\">\r\n      <!-- 输入标题 -->\r\n      <el-input placeholder=\"请输入标题\" v-model=\"articleName\">\r\n        <template slot=\"prepend\">文章标题 </template>\r\n      </el-input>\r\n      <!-- 输入标签 -->\r\n\r\n      <el-input\r\n        placeholder=\"请输入标签，注意每个标签用英文逗号隔开\"\r\n        v-model=\"articleTags\"\r\n      >\r\n        <template slot=\"prepend\">文章标签</template>\r\n      </el-input>\r\n      <!-- 文章所属目录 -->\r\n      <div class=\"articleLocation_wrapper\">\r\n        <span>文章所属目录：</span>\r\n        <div class=\"select_wrapper \" id=\"select_hp\">\r\n          <select name=\"\" id=\"\" @change=\"getElement\">\r\n            <option index=\"-1\">请选择</option>\r\n            <option\r\n              :value=\"JSON.stringify(value.childrens)\"\r\n              v-for=\"(value, index) in directorys\"\r\n              :key=\"index\"\r\n              :index=\"index\"\r\n              :path=\"value.path\"\r\n              :id=\"value.id\"\r\n              >{{ value.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <!-- 富文本内容 -->\r\n      <div class=\"wangeEdit_wrapper\">\r\n        <mark-down v-model=\"articleContent\" @success=\"getArticle\"></mark-down>\r\n      </div>\r\n      <!-- 上传 -->\r\n      <div class=\"btn_wrapper\">\r\n        <el-button-group>\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-circle-close\"\r\n            @click=\"cancleEdit\"\r\n            >退出</el-button\r\n          >\r\n          <el-button\r\n            type=\"primary\"\r\n            icon=\"el-icon-upload2\"\r\n            @click=\"commitArticle\"\r\n            >上传</el-button\r\n          >\r\n        </el-button-group>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport WangeEdit from \"@/components/other/WangEditor\";\r\nimport MarkDown from \"@/components/other/MarkDown\";\r\n\r\nimport {\r\n  getDirectory,\r\n  updateDirectory,\r\n  putArticle,\r\n  httpArticleAdd,\r\n} from \"@/network/Article.js\";\r\n\r\nimport { httpCreateDirector, httpGetDirectory } from \"@/network/Directory.js\";\r\n\r\nimport { validateLogin } from \"@/utils/Validate\";\r\n\r\nexport default {\r\n  components: {\r\n    WangeEdit,\r\n    \"mark-down\": MarkDown,\r\n  },\r\n  data() {\r\n    return {\r\n      articleName: \"\",\r\n      articleContent: \"\",\r\n      articleHtml: \"\",\r\n      directorys: [],\r\n      articleTags: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    if (validateLogin() === false) this.$router.push(\"/\");\r\n    httpGetDirectory(this.$store.state.people.user.id).then((data) => {\r\n      this.directorys = data.data;\r\n    });\r\n  },\r\n  beforeDestroy() {},\r\n  methods: {\r\n    /**\r\n     * 退出\r\n     */\r\n    cancleEdit() {\r\n      //this.$router.push(\"/\");\r\n      window.history.back();\r\n    },\r\n    /**\r\n     * 上传文章\r\n     */\r\n    commitArticle(e) {\r\n      /**第一步 创建文章对象*/\r\n      let articleName = this.articleName;\r\n      if (articleName.trim() === \"\") {\r\n        this.$message({\r\n          message: '请您<span style=\"color:red\">输入标题</span>',\r\n          dangerouslyUseHTMLString: true,\r\n        });\r\n        return;\r\n      }\r\n\r\n      /**第二步 获取目录的信息*/\r\n      let selecttions = document.getElementById(\"select_hp\").childNodes; // 获取所有选择框元素\r\n      let arrays = [];\r\n      for (let i = 0; i < selecttions.length; i++) {\r\n        arrays.push([i, selecttions[i].selectedIndex]);\r\n      }\r\n      let temp = arrays.pop();\r\n      let isRootTree = false; //用来判断是否为没有选择目录（根目录）\r\n      try {\r\n        while (temp[1] == 0) {\r\n          temp = arrays.pop();\r\n        }\r\n      } catch (error) {\r\n        // 说明选择的是根目录\r\n        isRootTree = true;\r\n        this.directorys.length === undefined\r\n          ? this.$message({\r\n              dangerouslyUseHTMLString: true,\r\n              message:\r\n                '请您前往<strong>我的文章</strong>在<strong>个人目录区</strong><span style=\"color:red\">右键</span>新建目录',\r\n            })\r\n          : this.$message({\r\n              message: '请您<span style=\"color:red\">选择</span>目录',\r\n              dangerouslyUseHTMLString: true,\r\n            });\r\n        return;\r\n      }\r\n      let option = isRootTree ? null : selecttions[temp[0]][temp[1]]; // 这是最终选择的option 从里面获取目录信息\r\n\r\n      let pid = isRootTree\r\n        ? this.$store.state.people.user.id\r\n        : option.getAttribute(\"id\");\r\n      let path = isRootTree\r\n        ? `/${this.$store.state.people.user.id}`\r\n        : option.getAttribute(\"path\");\r\n      let tags = this.articleTags;\r\n      let articleId;\r\n      /**第三步 文章上传服务器 添加文章 */\r\n      httpArticleAdd(\r\n        pid,\r\n        articleName,\r\n        this.articleContent,\r\n        this.$store.state.people.user.userName,\r\n        tags,\r\n        this.$store.state.people.user.id,\r\n        this.articleHtml\r\n      )\r\n        .then((data) => {\r\n          articleId = data.insertId;\r\n          return httpCreateDirector(\r\n            pid,\r\n            path,\r\n            articleName,\r\n            articleId,\r\n            this.$store.state.people.user.id\r\n          );\r\n        })\r\n        .then((Response) => {\r\n          this.$router.push({\r\n            path: `/Home/ReadArticle/${articleId}`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\"文章添加失败\");\r\n        });\r\n    },\r\n    /**\r\n     * 获取元素\r\n     */\r\n    getElement(e) {\r\n      const option = e.target.options[e.target.selectedIndex];\r\n      this.deleteSelection(option);\r\n      const value = option.getAttribute(\"value\");\r\n      // 如果option的value值是create就创建一个对话框\r\n      if (value === \"create\") {\r\n        this.createDilog(e);\r\n      }\r\n      // 如果value有值就创建目录\r\n      else if (value) {\r\n        this.createSelection(value, option);\r\n      }\r\n      //this.createSelection(msg,option);\r\n    },\r\n    /**\r\n     * msg 根据smg的数据来创建selection里面的option\r\n     * documentObj 获取点击的document元素\r\n     * 待选择第一个后，如果有子目录(msg[msg.length-1].length>0)，则创建后面的selection选项。\r\n     */\r\n    createSelection(msg, documentObj) {\r\n      // 如果有子目录则创建 否则返回\r\n      msg = JSON.parse(msg);\r\n      if (msg[msg.length - 1].length === 0) return;\r\n\r\n      const parent = documentObj.parentNode.parentNode; // 获取创建的selection的容器\r\n      const selectObj = document.createElement(\"select\");\r\n      const _this = this;\r\n      selectObj.addEventListener(\"change\", _this.getElement, false);\r\n\r\n      // 创建“请选择”的option\r\n      let option = document.createElement(\"option\");\r\n      option.innerHTML = \"请选择\";\r\n      option.setAttribute(\"index\", \"-1\");\r\n      selectObj.appendChild(option);\r\n\r\n      try {\r\n        // 选择性创建\"子目录\"的otion\r\n        for (let obj of msg) {\r\n          // 如果obj长度大于0说明是目录数组，则创建目录名单。\r\n          if (obj.length > 0) {\r\n            for (let index in obj) {\r\n              const option = document.createElement(\"option\");\r\n              option.setAttribute(\r\n                \"value\",\r\n                JSON.stringify(obj[index].childrens)\r\n              );\r\n              option.setAttribute(\"index\", index); // index 代表目录下面的目录索引值\r\n              option.setAttribute(\"path\", obj[index].path);\r\n              option.setAttribute(\"id\", obj[index].id);\r\n              option.innerHTML = obj[index].name;\r\n              selectObj.appendChild(option);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {}\r\n\r\n      // 创建\"新建\"的otion\r\n      option = document.createElement(\"option\");\r\n      option.setAttribute(\"value\", \"create\");\r\n      option.innerText = \"新建\";\r\n      //selectObj.appendChild(option); //暂时关闭新建这个功能\r\n\r\n      // 将seleciton添加到容器里面\r\n      parent.appendChild(selectObj);\r\n    },\r\n    /**\r\n     * 删除后面的selection选项\r\n     * */\r\n\r\n    deleteSelection(documentObj) {\r\n      const parent = documentObj.parentNode.parentNode;\r\n      let nextDocObj = documentObj.parentNode.nextElementSibling;\r\n      let deletArray = [];\r\n\r\n      // 这里要把兄弟结点存储进来一个个删除 边删除 边获取兄弟结点 会报错\r\n      while (nextDocObj) {\r\n        deletArray.push(nextDocObj);\r\n        nextDocObj = nextDocObj.nextElementSibling;\r\n      }\r\n      for (const iterator of deletArray) {\r\n        parent.removeChild(iterator);\r\n      }\r\n    },\r\n    /**\r\n     * 创建输入对话框\r\n     */\r\n    createDilog(event) {\r\n      // 去除已经存在的对话框 避免重复创建对话框\r\n      var hpDialog = document.getElementById(\"hpDialog\");\r\n      hpDialog && document.body.removeChild(hpDialog);\r\n\r\n      // 定义对话框的容器\r\n      const divObj = document.createElement(\"div\");\r\n      divObj.setAttribute(\r\n        \"style\",\r\n        `\r\n        position: fixed;\r\n        background: white;\r\n        box-shadow: 0px 0px 10px 10px rgba(146, 146, 146);\r\n        top:calc(50% - 100px);\r\n        left:calc(50% - 200px);\r\n        width:400px;\r\n        height:200px;\r\n        display: flex;\r\n        padding: 15px;\r\n        flex-direction: column;\r\n        justify-content: space-around;\r\n        z-index:999999;\r\n      `\r\n      );\r\n      divObj.setAttribute(\"id\", \"hpDialog\");\r\n\r\n      //定义输入框\r\n      const input = document.createElement(\"input\");\r\n      input.setAttribute(\"placeholder\", \"请输入目录名称\");\r\n      input.setAttribute(\"class\", \"g_input\");\r\n      divObj.appendChild(input);\r\n\r\n      //定义按钮容器\r\n      const btnGroup = document.createElement(\"div\");\r\n      btnGroup.setAttribute(\r\n        \"style\",\r\n        `\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        `\r\n      );\r\n\r\n      //定义确认按钮\r\n      const buttonDo = document.createElement(\"button\");\r\n      buttonDo.setAttribute(\"class\", \"g_btn g_btn_larger g_btn_success\");\r\n      buttonDo.innerText = \"确认\";\r\n      buttonDo.addEventListener(\r\n        \"click\",\r\n        () => {\r\n          if (input.value.trim() === \"\") {\r\n            alert(\"请输入文字!\");\r\n            return;\r\n          }\r\n          document.body.removeChild(divObj);\r\n          const option = event.target.options[event.target.selectedIndex]; // 这里获取点击“新建”的option元素对象\r\n          const optionWrapper = event.target; // 获取option的容器 方便插入新的option\r\n\r\n          //将对话框输入的文字插入到option容器里面的option中，并且创建新的selection方便再这个目录下面再次创建新的目录\r\n          const newOption = document.createElement(\"option\");\r\n          newOption.setAttribute(\"value\", input.value);\r\n          newOption.setAttribute(\"index\", \"-2\");\r\n          newOption.innerText = input.value;\r\n          optionWrapper.insertBefore(newOption, option);\r\n          optionWrapper.selectedIndex--; // -1是为了让option的容器对准输入的文字\r\n          this.getElement(event);\r\n        },\r\n        false\r\n      );\r\n\r\n      //定义取消按钮\r\n      const buttonCancle = document.createElement(\"button\");\r\n      buttonCancle.setAttribute(\"class\", \"g_btn g_btn_larger g_btn_cancle\");\r\n      buttonCancle.innerText = \"取消\";\r\n      buttonCancle.addEventListener(\r\n        \"click\",\r\n        () => {\r\n          document.body.removeChild(divObj);\r\n          event.target.selectedIndex = 0;\r\n        },\r\n        false\r\n      );\r\n      btnGroup.appendChild(buttonDo);\r\n      btnGroup.appendChild(buttonCancle);\r\n\r\n      divObj.appendChild(btnGroup);\r\n\r\n      document.body.appendChild(divObj);\r\n    },\r\n    /**\r\n     * 获取目录\r\n     */\r\n    async getDirectory() {\r\n      await getDirectory(\"/Directory/getAllDirectory\")\r\n        .then((Response) => {\r\n          this.directorys = Response.data;\r\n        })\r\n        .catch((err) => {\r\n          //console.log(err);\r\n        });\r\n    },\r\n    /**获取子组件的文章信息 */\r\n    getArticle(event) {\r\n      this.articleHtml = event.articleHtml;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.editer-modle {\r\n  background: white;\r\n}\r\n#createArticle {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(146, 146, 146, 0.3);\r\n  .Article-wrapper {\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    box-shadow: 0px 0px 10px 10px rgb(146, 146, 144);\r\n    background: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    .input_wrapper {\r\n      display: block;\r\n      padding: 10px;\r\n      outline: none;\r\n      border: 0;\r\n      border-bottom: 1px solid rgba(146, 146, 146, 0.8);\r\n      height: 18px;\r\n      flex: none;\r\n    }\r\n    .articleLocation_wrapper {\r\n      height: 40px;\r\n      line-height: 40px;\r\n      padding: 0 10px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: start;\r\n      border-bottom: 1px solid rgba(146, 146, 146, 0.8);\r\n    }\r\n    .wangeEdit_wrapper {\r\n      flex: 1;\r\n      min-height: 200px;\r\n      overflow: scroll;\r\n    }\r\n    .article_tags {\r\n      width: 100%;\r\n      flex: none;\r\n    }\r\n    .btn_wrapper {\r\n      flex: none;\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: flex-end;\r\n      height: 60px;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateArticle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateArticle.vue?vue&type=template&id=4d518f56&\"\nimport script from \"./CreateArticle.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateArticle.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CreateArticle.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}